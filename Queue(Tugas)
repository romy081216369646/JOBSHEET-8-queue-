class Queue {
    Pembeli[] antrian;
    int front, rear, size, max;
    
    Queue(int n) {
        max = n;
        antrian = new Pembeli[max];
        front = size = 0;
        rear = -1;
    }
    
    boolean isEmpty() {
        return (size == 0);
    }
    
    boolean isFull() {
        return (size == max);
    }
    
    void enqueue(Pembeli antri) {
        if (isFull()) {
            System.out.println("Antrian penuh, mohon tunggu sebentar.");
            return;
        }
        rear = (rear + 1) % max;
        antrian[rear] = antri;
        size++;
    }
    
    int dequeue() {
        if (isEmpty()) {
            System.out.println("Antrian kosong, tidak ada yang bisa dikeluarkan.");
            return -1;
        }
        Pembeli temp = antrian[front];
        front = (front + 1) % max;
        size--;
        return temp.noHP;
    }
    
    void print() {
        if (isEmpty()) {
            System.out.println("Antrian kosong.");
            return;
        }
        System.out.println("Antrian pembeli:");
        for (int i = front; i <= rear; i = (i + 1) % max) {
            System.out.println("Nama: " + antrian[i].nama + ", No HP: " + antrian[i].noHP);
        }
    }
    
    void peek() {
        if (isEmpty()) {
            System.out.println("Antrian kosong.");
            return;
        }
        System.out.println("Pembeli paling depan: " + antrian[front].nama);
    }
    
    void peekRear() {
        if (isEmpty()) {
            System.out.println("Antrian kosong.");
            return;
        }
        System.out.println("Pembeli paling belakang: " + antrian[rear].nama);
    }
    
    void peekPosition(String nama) {
        if (isEmpty()) {
            System.out.println("Antrian kosong.");
            return;
        }
        for (int i = front; i <= rear; i = (i + 1) % max) {
            if (antrian[i].nama.equals(nama)) {
                System.out.println("Pembeli " + nama + " berada di posisi antrian ke-" + (i - front + 1));
                return;
            }
        }
        System.out.println("Pembeli " + nama + " tidak ditemukan dalam antrian.");
    }
    
    void daftarPembeli() {
        if (isEmpty()) {
            System.out.println("Antrian kosong.");
            return;
        }
        System.out.println("Daftar seluruh pembeli:");
        for (int i = front; i <= rear; i = (i + 1) % max) {
            System.out.println("Nama: " + antrian[i].nama + ", No HP: " + antrian[i].noHP);
        }
    }
}
